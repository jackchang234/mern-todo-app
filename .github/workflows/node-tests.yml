name: Node.js CI/CD

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    
    env:
      JWT_SECRET: test_jwt_secret
      NODE_ENV: test
      MONGODB_URI: mongodb://localhost:27017/test
      
    strategy:
      matrix:
        node-version: [18.x]
        mongodb-version: ['6.0']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Start MongoDB
      uses: supercharge/mongodb-github-action@1.10.0
      with:
        mongodb-version: ${{ matrix.mongodb-version }}
    
    - name: Install dependencies
      run: npm run install-all
    
    - name: Install backend dependencies
      run: |
        cd server
        npm ci
    
    - name: Run backend tests
      run: |
        cd server
        npm test
    
    - name: Generate code coverage report
      if: success()
      run: |
        cd server
        npm run test:coverage
    
    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: coverage-report
        path: server/coverage/
        
  test-frontend:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install frontend dependencies
      run: |
        cd client
        npm ci
    
    - name: Run frontend tests
      run: |
        cd client
        npm test -- --watchAll=false
    
    - name: Build frontend
      run: |
        cd client
        npm run build

  deploy:
    needs: [test-backend, test-frontend]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Deploy to Render
      env:
        RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
      run: |
        curl -X POST "https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys" \
          -H "accept: application/json" \
          -H "authorization: Bearer ${{ secrets.RENDER_API_KEY }}" 